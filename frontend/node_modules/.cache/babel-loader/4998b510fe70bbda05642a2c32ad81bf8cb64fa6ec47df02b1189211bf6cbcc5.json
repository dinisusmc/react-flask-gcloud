{"ast":null,"code":"import{opts}from'../common';import{useEffect,useMemo,useState}from\"react\";import Particles,{initParticlesEngine}from\"@tsparticles/react\";// import { loadAll } from \"@tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport{loadSlim}from\"@tsparticles/slim\";// if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\nimport{jsx as _jsx,Fragment as _Fragment}from\"react/jsx-runtime\";const Particle=()=>{const[init,setInit]=useState(false);// this should be run only once per application lifetime\nuseEffect(()=>{initParticlesEngine(async engine=>{// you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n// this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n// starting from v2 you can add only the features you need reducing the bundle size\n//await loadAll(engine);\n//await loadFull(engine);\nawait loadSlim(engine);//await loadBasic(engine);\n}).then(()=>{setInit(true);});},[]);const particlesLoaded=container=>{return null;};if(init){return/*#__PURE__*/_jsx(Particles,{id:\"tsparticles\",particlesLoaded:particlesLoaded,options:opts});}return/*#__PURE__*/_jsx(_Fragment,{});};export default Particle;","map":{"version":3,"names":["opts","useEffect","useMemo","useState","Particles","initParticlesEngine","loadSlim","jsx","_jsx","Fragment","_Fragment","Particle","init","setInit","engine","then","particlesLoaded","container","id","options"],"sources":["/Users/dinis/school/cloud_computing/cc_project/frontend/src/components/Particle.jsx"],"sourcesContent":["import { opts } from '../common';\nimport { useEffect, useMemo, useState } from \"react\";\nimport Particles, { initParticlesEngine } from \"@tsparticles/react\";\n// import { loadAll } from \"@tsparticles/all\"; // if you are going to use `loadAll`, install the \"@tsparticles/all\" package too.\n// import { loadFull } from \"tsparticles\"; // if you are going to use `loadFull`, install the \"tsparticles\" package too.\nimport { loadSlim } from \"@tsparticles/slim\"; // if you are going to use `loadSlim`, install the \"@tsparticles/slim\" package too.\n// import { loadBasic } from \"@tsparticles/basic\"; // if you are going to use `loadBasic`, install the \"@tsparticles/basic\" package too.\n\nconst Particle = () => {\n  const [init, setInit] = useState(false);\n\n  // this should be run only once per application lifetime\n  useEffect(() => {\n    initParticlesEngine(async (engine) => {\n      // you can initiate the tsParticles instance (engine) here, adding custom shapes or presets\n      // this loads the tsparticles package bundle, it's the easiest method for getting everything ready\n      // starting from v2 you can add only the features you need reducing the bundle size\n      //await loadAll(engine);\n      //await loadFull(engine);\n      await loadSlim(engine);\n      //await loadBasic(engine);\n    }).then(() => {\n      setInit(true);\n    });\n  }, []);\n\n  const particlesLoaded = (container) => {\n    return null;\n  };\n\n\n  if (init) {\n    return (\n      <Particles\n        id=\"tsparticles\"\n        particlesLoaded={particlesLoaded}\n        options={opts}\n      />\n    );\n  }\n\n  return <></>;\n};\n\nexport default Particle;"],"mappings":"AAAA,OAASA,IAAI,KAAQ,WAAW,CAChC,OAASC,SAAS,CAAEC,OAAO,CAAEC,QAAQ,KAAQ,OAAO,CACpD,MAAO,CAAAC,SAAS,EAAIC,mBAAmB,KAAQ,oBAAoB,CACnE;AACA;AACA,OAASC,QAAQ,KAAQ,mBAAmB,CAAE;AAC9C;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEA,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,IAAI,CAAEC,OAAO,CAAC,CAAGV,QAAQ,CAAC,KAAK,CAAC,CAEvC;AACAF,SAAS,CAAC,IAAM,CACdI,mBAAmB,CAAC,KAAO,CAAAS,MAAM,EAAK,CACpC;AACA;AACA;AACA;AACA;AACA,KAAM,CAAAR,QAAQ,CAACQ,MAAM,CAAC,CACtB;AACF,CAAC,CAAC,CAACC,IAAI,CAAC,IAAM,CACZF,OAAO,CAAC,IAAI,CAAC,CACf,CAAC,CAAC,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAG,eAAe,CAAIC,SAAS,EAAK,CACrC,MAAO,KAAI,CACb,CAAC,CAGD,GAAIL,IAAI,CAAE,CACR,mBACEJ,IAAA,CAACJ,SAAS,EACRc,EAAE,CAAC,aAAa,CAChBF,eAAe,CAAEA,eAAgB,CACjCG,OAAO,CAAEnB,IAAK,CACf,CAAC,CAEN,CAEA,mBAAOQ,IAAA,CAAAE,SAAA,GAAI,CAAC,CACd,CAAC,CAED,cAAe,CAAAC,QAAQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}